// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: beer.proto at 180:1
package beer.hapibrew.beerxml2proto.proto;

import android.os.Parcelable;
import android.support.annotation.Nullable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class Mash extends AndroidMessage<Mash, Mash.Builder> {
  public static final ProtoAdapter<Mash> ADAPTER = new ProtoAdapter_Mash();

  public static final Parcelable.Creator<Mash> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final Integer DEFAULT_VERSION = 1;

  public static final Double DEFAULT_SPARGE_TEMP = 0.0d;

  public static final Double DEFAULT_PH = 0.0d;

  public static final String DEFAULT_NOTES = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String name;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  @Nullable
  public final Integer version;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  @Nullable
  public final Double sparge_temp;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  @Nullable
  public final Double ph;

  @WireField(
      tag = 5,
      adapter = "beer.hapibrew.beerxml2proto.proto.MashStep#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<MashStep> steps;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  @Nullable
  public final String notes;

  public Mash(@Nullable String name, @Nullable Integer version, @Nullable Double sparge_temp, @Nullable Double ph, List<MashStep> steps, @Nullable String notes) {
    this(name, version, sparge_temp, ph, steps, notes, ByteString.EMPTY);
  }

  public Mash(@Nullable String name, @Nullable Integer version, @Nullable Double sparge_temp, @Nullable Double ph, List<MashStep> steps, @Nullable String notes, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.name = name;
    this.version = version;
    this.sparge_temp = sparge_temp;
    this.ph = ph;
    this.steps = Internal.immutableCopyOf("steps", steps);
    this.notes = notes;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.name = name;
    builder.version = version;
    builder.sparge_temp = sparge_temp;
    builder.ph = ph;
    builder.steps = Internal.copyOf("steps", steps);
    builder.notes = notes;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Mash)) return false;
    Mash o = (Mash) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(name, o.name)
        && Internal.equals(version, o.version)
        && Internal.equals(sparge_temp, o.sparge_temp)
        && Internal.equals(ph, o.ph)
        && steps.equals(o.steps)
        && Internal.equals(notes, o.notes);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (version != null ? version.hashCode() : 0);
      result = result * 37 + (sparge_temp != null ? sparge_temp.hashCode() : 0);
      result = result * 37 + (ph != null ? ph.hashCode() : 0);
      result = result * 37 + steps.hashCode();
      result = result * 37 + (notes != null ? notes.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (name != null) builder.append(", name=").append(name);
    if (version != null) builder.append(", version=").append(version);
    if (sparge_temp != null) builder.append(", sparge_temp=").append(sparge_temp);
    if (ph != null) builder.append(", ph=").append(ph);
    if (!steps.isEmpty()) builder.append(", steps=").append(steps);
    if (notes != null) builder.append(", notes=").append(notes);
    return builder.replace(0, 2, "Mash{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Mash, Builder> {
    public String name;

    public Integer version;

    public Double sparge_temp;

    public Double ph;

    public List<MashStep> steps;

    public String notes;

    public Builder() {
      steps = Internal.newMutableList();
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    public Builder sparge_temp(Double sparge_temp) {
      this.sparge_temp = sparge_temp;
      return this;
    }

    public Builder ph(Double ph) {
      this.ph = ph;
      return this;
    }

    public Builder steps(List<MashStep> steps) {
      Internal.checkElementsNotNull(steps);
      this.steps = steps;
      return this;
    }

    public Builder notes(String notes) {
      this.notes = notes;
      return this;
    }

    @Override
    public Mash build() {
      return new Mash(name, version, sparge_temp, ph, steps, notes, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Mash extends ProtoAdapter<Mash> {
    ProtoAdapter_Mash() {
      super(FieldEncoding.LENGTH_DELIMITED, Mash.class);
    }

    @Override
    public int encodedSize(Mash value) {
      return (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.name) : 0)
          + (value.version != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.version) : 0)
          + (value.sparge_temp != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(3, value.sparge_temp) : 0)
          + (value.ph != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(4, value.ph) : 0)
          + MashStep.ADAPTER.asRepeated().encodedSizeWithTag(5, value.steps)
          + (value.notes != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.notes) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Mash value) throws IOException {
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name);
      if (value.version != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.version);
      if (value.sparge_temp != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 3, value.sparge_temp);
      if (value.ph != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 4, value.ph);
      MashStep.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.steps);
      if (value.notes != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.notes);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Mash decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.version(ProtoAdapter.INT32.decode(reader)); break;
          case 3: builder.sparge_temp(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 4: builder.ph(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 5: builder.steps.add(MashStep.ADAPTER.decode(reader)); break;
          case 6: builder.notes(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Mash redact(Mash value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.steps, MashStep.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
