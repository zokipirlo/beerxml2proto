// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: beer.proto at 189:1
package beer.hapibrew.beerxml2proto.proto;

import android.os.Parcelable;
import android.support.annotation.Nullable;
import com.squareup.wire.AndroidMessage;
import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Fermentation extends AndroidMessage<Fermentation, Fermentation.Builder> {
  public static final ProtoAdapter<Fermentation> ADAPTER = new ProtoAdapter_Fermentation();

  public static final Parcelable.Creator<Fermentation> CREATOR = AndroidMessage.newCreator(ADAPTER);

  private static final long serialVersionUID = 0L;

  public static final Double DEFAULT_DAYS = 0.0d;

  public static final Double DEFAULT_TEMPERATURE = 0.0d;

  public static final Integer DEFAULT_STEP = 0;

  public static final Boolean DEFAULT_IS_AGING = false;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  @Nullable
  public final Double days;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  @Nullable
  public final Double temperature;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  @Nullable
  public final Integer step;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  @Nullable
  public final Boolean is_aging;

  public Fermentation(@Nullable Double days, @Nullable Double temperature, @Nullable Integer step, @Nullable Boolean is_aging) {
    this(days, temperature, step, is_aging, ByteString.EMPTY);
  }

  public Fermentation(@Nullable Double days, @Nullable Double temperature, @Nullable Integer step, @Nullable Boolean is_aging, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.days = days;
    this.temperature = temperature;
    this.step = step;
    this.is_aging = is_aging;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.days = days;
    builder.temperature = temperature;
    builder.step = step;
    builder.is_aging = is_aging;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Fermentation)) return false;
    Fermentation o = (Fermentation) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(days, o.days)
        && Internal.equals(temperature, o.temperature)
        && Internal.equals(step, o.step)
        && Internal.equals(is_aging, o.is_aging);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (days != null ? days.hashCode() : 0);
      result = result * 37 + (temperature != null ? temperature.hashCode() : 0);
      result = result * 37 + (step != null ? step.hashCode() : 0);
      result = result * 37 + (is_aging != null ? is_aging.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (days != null) builder.append(", days=").append(days);
    if (temperature != null) builder.append(", temperature=").append(temperature);
    if (step != null) builder.append(", step=").append(step);
    if (is_aging != null) builder.append(", is_aging=").append(is_aging);
    return builder.replace(0, 2, "Fermentation{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Fermentation, Builder> {
    public Double days;

    public Double temperature;

    public Integer step;

    public Boolean is_aging;

    public Builder() {
    }

    public Builder days(Double days) {
      this.days = days;
      return this;
    }

    public Builder temperature(Double temperature) {
      this.temperature = temperature;
      return this;
    }

    public Builder step(Integer step) {
      this.step = step;
      return this;
    }

    public Builder is_aging(Boolean is_aging) {
      this.is_aging = is_aging;
      return this;
    }

    @Override
    public Fermentation build() {
      return new Fermentation(days, temperature, step, is_aging, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Fermentation extends ProtoAdapter<Fermentation> {
    ProtoAdapter_Fermentation() {
      super(FieldEncoding.LENGTH_DELIMITED, Fermentation.class);
    }

    @Override
    public int encodedSize(Fermentation value) {
      return (value.days != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(1, value.days) : 0)
          + (value.temperature != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(2, value.temperature) : 0)
          + (value.step != null ? ProtoAdapter.INT32.encodedSizeWithTag(3, value.step) : 0)
          + (value.is_aging != null ? ProtoAdapter.BOOL.encodedSizeWithTag(4, value.is_aging) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Fermentation value) throws IOException {
      if (value.days != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 1, value.days);
      if (value.temperature != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 2, value.temperature);
      if (value.step != null) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.step);
      if (value.is_aging != null) ProtoAdapter.BOOL.encodeWithTag(writer, 4, value.is_aging);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Fermentation decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.days(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 2: builder.temperature(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 3: builder.step(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.is_aging(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Fermentation redact(Fermentation value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
